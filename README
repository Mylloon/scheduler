Projet de programmation système avancée
=======================================

Compilation optimisée avec ordonnanceur *work-stealing*
-------------------------------------------------------

  make

Ce qui créer l'exécutable `ordonnanceur.elf`.

Paramètres disponibles :

* -q   : lance le benchmark avec quicksort
* -m   : lance le benchmark avec mandelbrot
* -t n : où `n` est le nombre de threads à utiliser, 0 signifie qu'on utilise
         tous les cœurs disponibles.
* -s   : n'utilises pas d'ordonnanceur

Exemple : quicksort en utilisant tous les cœurs disponibles

  ./ordonnanceur.elf -qt 0


Cible du makefile
--------------

Il est possible d'utiliser d'autres implémentations d'ordonnanceur en changeant
la cible du Makefile.

* `make threads` : lance juste des threads
* `make lifo`    : utilisation d'une pile
* `make random`  : idem que `lifo` mais en prenant une tâche aléatoire
* `make ws`      : work-stealing


Infos
-----

Le rapport se trouve dans le dossier courant.

Lien vers le dépôt : https://git.mylloon.fr/Paris7/work-stealing-scheduler

Anri Kennel 22302653
